{"version":3,"sources":["webpack:///./src/templates/blog-post.module.sass","webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","Bio","site","siteMetadata","author","social","style","display","marginBottom","rhythm","href","github","backgroundImage","name","summary","pageQuery","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","marginTop","scale","date","padding","margin","tags","map","element","to","className","styles","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","fields","slug","rel"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,QAAU,oCAAoC,iBAAmB,iD,2gDCqEpEC,EAzDH,WACV,IADgB,EACN,OAuBsBC,KAAKC,aAA7BC,EAxBQ,EAwBRA,OAAQC,EAxBA,EAwBAA,OAChB,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAgBvB,yCACa,uBAAGC,KAAI,sBAAwBL,EAAOM,OACjDL,MAAO,CAACM,gBAAgB,SACxB,gCAASR,EAAOS,QAtBpB,IAuBcT,EAAOU,QAvBrB,M,6CC+DSC,GAFEC,UA1FU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKf,KAAKC,aAAaoB,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,iCACE,gCACE,wBACEtB,MAAO,CACLuB,UAAWpB,YAAO,GAClBD,aAAc,IAGfY,EAAKM,YAAYH,OAEpB,uBACEjB,MAAK,iBACAwB,aAAM,IADN,CAEHvB,QAAQ,QACRC,aAAcC,YAAO,OAGtBW,EAAKM,YAAYK,MAEpB,6BACE,wBACEzB,MAAO,CACL0B,QAAS,EACTC,OAAQ,aACRzB,aAAcC,YAAO,KAGtBW,EAAKM,YAAYQ,KAAKC,KAAI,SAAAC,GAAO,OAChC,kBAAC,OAAD,CACEC,GAAE,QAAUD,EACZ9B,MAAO,CAAEM,gBAAgB,SAEzB,wBAAI0B,UAAWC,IAAM,SAAcH,UAM7C,6BAASI,wBAAyB,CAAEC,OAAQrB,EAAKsB,QACjD,wBACEpC,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,EAAD,QAIJ,6BACE,wBACEH,MAAO,CACLC,QAAQ,OACRoC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVb,QAAS,IAGX,4BACGR,GACC,kBAAC,OAAD,CAAMa,GAAIb,EAASsB,OAAOC,KAAMC,IAAI,QAApC,KACKxB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMY,GAAIZ,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKC,YAAYH,MADpB,WAaQ","file":"component---src-templates-blog-post-js-11ba5fcb3e84959fd9c6.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogTag\":\"blog-post-module--blog-tag--2JghA\",\"blogTagSmallSize\":\"blog-post-module--blog-tag-small-size--3s4nT\"};","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n// import Image from \"gatsby-image\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(2.5),\r\n      }}\r\n    >\r\n      {/* <Image\r\n        fixed={data.avatar.childImageSharp.fixed}\r\n        alt={author.name}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`,\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`,\r\n        }}\r\n      /> */}\r\n      <p>\r\n        Written by <a href={`https://github.com/${social.github}`} \r\n        style={{backgroundImage: `none`}}>\r\n        <strong>{author.name}</strong>\r\n        </a></p> {author.summary}\r\n        {` `}\r\n        {/* <a href={`https://github.com/${social.github}`}> */}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nimport styles from \"./blog-post.module.sass\"\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const { previous, next } = pageContext\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article>\r\n        <header>\r\n          <h1\r\n            style={{\r\n              marginTop: rhythm(1),\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            {post.frontmatter.title}\r\n          </h1>\r\n          <p\r\n            style={{\r\n              ...scale(-1 / 5),\r\n              display: `block`,\r\n              marginBottom: rhythm(0.8),\r\n            }}\r\n          >\r\n            {post.frontmatter.date}\r\n          </p>\r\n          <div>\r\n            <ul\r\n              style={{\r\n                padding: 0,\r\n                margin: \"0 -.625rem\",\r\n                marginBottom: rhythm(1),\r\n              }}\r\n            >\r\n              {post.frontmatter.tags.map(element => (\r\n                <Link\r\n                  to={`/tag/${element}`}\r\n                  style={{ backgroundImage: `none` }}\r\n                >\r\n                  <li className={styles[\"blogTag\"]}>{element}</li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}