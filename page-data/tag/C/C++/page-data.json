{"componentChunkName":"component---src-templates-tag-page-js","path":"/tag/C/C++","result":{"data":{"site":{"siteMetadata":{"title":"Twistronics Blog"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/blogs/hello-lucene-3/"},"frontmatter":{"title":"HelloLucene 使用Lucene搭建简易检索系统——结合Word2vec (3)","date":"September 21, 2016","description":"Lucene练习，在hellolucene的基础上，结合Word2vec","tags":["Java","C/C++","Information retrieval"]}}},{"node":{"fields":{"slug":"/blogs/Parallel-computing-4/"},"frontmatter":{"title":"并行计算实验（4）——Jacobi迭代的MPI + OpenMP实现","date":"April 17, 2014","description":"Jacobi迭代的MPI + OpenMP实现","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/Parallel-computing-3/"},"frontmatter":{"title":"并行计算实验（3）——使用MPICC","date":"April 15, 2014","description":"使用MPICC","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/Parallel-computing-2/"},"frontmatter":{"title":"并行计算实验（2）——使用OpenMP","date":"April 12, 2014","description":"使用openMP","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/parallel-computing-1/"},"frontmatter":{"title":"并行计算实验（1）——提升空间局部性 ","date":"April 11, 2014","description":"1. 提升空间局部性。2. 使用 IVDEP 编译指示，开启编译器优化选项","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/A-star-algorithm/"},"frontmatter":{"title":"使用C++实现A*寻路算法","date":"October 08, 2013","description":"使用C++实现A*寻路算法","tags":["C/C++","Algorithm"]}}},{"node":{"fields":{"slug":"/blogs/sudoku/"},"frontmatter":{"title":"使用C++解决数独问题","date":"October 07, 2013","description":"使用C++解决数独问题","tags":["C/C++","Algorithm"]}}}]}},"pageContext":{"tag":"C/C++"}}}