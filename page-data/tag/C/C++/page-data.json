{"componentChunkName":"component---src-templates-tag-page-js","path":"/tag/C/C++","result":{"data":{"site":{"siteMetadata":{"title":"Twistronics Blog"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/blogs/hello-lucene-3/"},"frontmatter":{"title":"HelloLucene 使用Lucene搭建简易检索系统——结合Word2vec (3)","date":"September 21, 2016","description":"Lucene练习，在hellolucene的基础上，结合Word2vec","tags":["Java","C/C++","Information retrieval"]}}},{"node":{"fields":{"slug":"/blogs/Parallel-computing-4/"},"frontmatter":{"title":"并行计算实验（4）——Jacobi迭代的MPI + OpenMP实现","date":"April 17, 2014","description":"Jacobi迭代的MPI + OpenMP实现","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/Parallel-computing-3/"},"frontmatter":{"title":"并行计算实验（3）——使用MPICC","date":"April 15, 2014","description":"使用MPICC","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/Parallel-computing-2/"},"frontmatter":{"title":"并行计算实验（2）——使用OpenMP","date":"April 12, 2014","description":"使用openMP","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/parallel-computing-1/"},"frontmatter":{"title":"并行计算实验（1）——提升空间局部性 ","date":"April 11, 2014","description":"1. 提升空间局部性。2. 使用 IVDEP 编译指示，开启编译器优化选项","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"fields":{"slug":"/blogs/http-server-cpp/"},"frontmatter":{"title":"HTTP服务的简单实现","date":"March 30, 2014","description":"实现一个简单的可以动态加载模块的HTTP服务器。","tags":["C/C++","TCP/IP"]}}},{"node":{"fields":{"slug":"/blogs/LINKED-LIST/"},"frontmatter":{"title":"线程安全的抽象链表类库","date":"March 25, 2014","description":"实现线程安全的抽象链表库。","tags":["C/C++"]}}},{"node":{"fields":{"slug":"/blogs/rational-lib/"},"frontmatter":{"title":"有理数类库","date":"March 22, 2014","description":"参照 Complex 类库的代码，实现有理数类库。","tags":["C/C++"]}}},{"node":{"fields":{"slug":"/blogs/storage-pool/"},"frontmatter":{"title":"动态存储管理机制","date":"March 20, 2014","description":"重载 new 和 delete 操作符，基于伙伴系统（buddy system），创建自己的内存管理机制。","tags":["C/C++"]}}},{"node":{"fields":{"slug":"/blogs/File-Transfer-Protocol/"},"frontmatter":{"title":"文件传输协议（FTP）的设计和实现","date":"March 19, 2014","description":"了解FTP的具体实现细节。设计和实现一个简单的文件传输协议。","tags":["C/C++","TCP/IP"]}}},{"node":{"fields":{"slug":"/blogs/Routing-Information-Protocol/"},"frontmatter":{"title":"路由协议RIP的简单实现","date":"March 07, 2014","description":"充分理解RIP（ Routing Information Protocol）协议，IP协议的报文处理和超时处理函数，并实现如下功能：RIP报文有效性检查；处理Req，根据RIP协议的流程设计Ruest报文；处理Response报文；路由表项超时删除；路由表项定时发送。","tags":["C/C++","TCP/IP"]}}},{"node":{"fields":{"slug":"/blogs/Sliding-Window-Protocol/"},"frontmatter":{"title":"滑动窗口协议","date":"March 01, 2014","description":"采用滑动窗口中的选择重发协议实现了一个文件传输程序。","tags":["C/C++","TCP/IP"]}}},{"node":{"fields":{"slug":"/blogs/A-star-algorithm/"},"frontmatter":{"title":"使用C++实现A*寻路算法","date":"October 08, 2013","description":"使用C++实现A*寻路算法","tags":["C/C++","Algorithm"]}}},{"node":{"fields":{"slug":"/blogs/sudoku/"},"frontmatter":{"title":"使用C++解决数独问题","date":"October 07, 2013","description":"使用C++解决数独问题","tags":["C/C++","Algorithm"]}}}]}},"pageContext":{"tag":"C/C++"}}}