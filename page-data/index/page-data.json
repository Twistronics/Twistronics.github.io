{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Twistronics Blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"同义句检测： 对于表述方式不同的两句话判断是否含义类似 example： true…","fields":{"slug":"/blogs/synonymous-sentences-detection/"},"frontmatter":{"date":"June 02, 2017","title":"Synonymous Sentences Detection","description":"使用基于短语的机器学习模型，对于表述方式不同的两句话判断是否含义类似","tags":["Algorithm","Natural language processing","Machine learning","机器学习"]}}},{"node":{"excerpt":"利用组合范畴语法进行餐饮问答的语义分析，把自然语言转化成逻辑表达式，在知识库上生成答案 逻辑表达式 逻辑表达式是由知识库中名词常量、关系和变量组成的表达式，能够表现自然语句中出现的各个成分以及成分之间的关系。 使用lambda calculus标注逻辑表达式 组合范畴语法（CCG…","fields":{"slug":"/blogs/Combinatory-categorial-grammar/"},"frontmatter":{"date":"March 19, 2017","title":"Combinatory categorial grammar","description":"利用组合范畴语法进行餐饮问答的语义分析，把自然语言转化成逻辑表达式，在知识库上生成答案","tags":["Java","Algorithm","Natural language processing","Machine learning","机器学习"]}}},{"node":{"excerpt":"This article presents an attempt for playing contra on Nintendo Entertainment System (NES) with neural networks. We have tried different…","fields":{"slug":"/blogs/an-attempt-to-playing-contra-with-machine-learning/"},"frontmatter":{"date":"December 03, 2016","title":"An attempt to playing contra with machine learning","description":"This article presents an attempt for playing contra on Nintendo Entertainment System (NES) with neural networks. We have tried different network architectures and different strategies of training, but we failed to beat level 1. We mainly focus on the analysis of our failure and possible solutions.","tags":["Machine learning","机器学习"]}}},{"node":{"excerpt":"Option 1. Image Captioning using RNN and LSTM Q1: Image Captioning with Vanilla RNNs The IPython notebook  walk through the implementation…","fields":{"slug":"/blogs/cs231n-Practical-Machine-Learning-Project-2/"},"frontmatter":{"date":"November 10, 2016","title":"cs231n: Practical Machine Learning Project 2","description":"Option 1. Image Captioning using RNN and LSTM. ","tags":["Python","Machine learning","机器学习"]}}},{"node":{"excerpt":"在 zhwiki 数据集中取300篇文章作为数据集，进行LSI分析，借助python的gensim库使用tfidf k取不同值时，对term-doc矩阵近似程度的变化情况\n当 k=2 时 k=3 时 k=4 时 k=10 时 可以看到，k…","fields":{"slug":"/blogs/latent-semantic-indexing/"},"frontmatter":{"date":"October 22, 2016","title":"对zhwiki数据集进行LSI分析 (latent semantic indexing)","description":"在 zhwiki 数据集中取300篇文章作为数据集，进行LSI分析，借助python的gensim库使用tfidf","tags":["Python","Algorithm","Natural language processing"]}}},{"node":{"excerpt":"In this problem, we are given reference genome of Homo sapiens and\nthe genomic loci of all circRNAs. Given a certain genomic locus, our goal…","fields":{"slug":"/blogs/circRNAs/"},"frontmatter":{"date":"October 04, 2016","title":"Use machine learning algorithm to predict whether an RNA sequence can form a circular RNA ","description":"In this problem, we are given reference genome of Homo sapiens and the genomic loci of all circRNAs. Given a certain genomic locus, our goal is to develop a classifier to predict whether a pair of two loci will form a circRNA or not","tags":["Python","Machine learning","机器学习","TensorFlow"]}}},{"node":{"excerpt":"基于   直接利用 word2vec 文件，调用命令行 修改 word2vec 中的  代码，使其能从命令行直接查询 使用该命令编译 其中 test.bin 是word2vec用中文维基训练出来的 没有word2vec…","fields":{"slug":"/blogs/hello-lucene-3/"},"frontmatter":{"date":"September 21, 2016","title":"HelloLucene 使用Lucene搭建简易检索系统——结合Word2vec (3)","description":"Lucene练习，在hellolucene的基础上，结合Word2vec","tags":["Java","C/C++","Information retrieval"]}}},{"node":{"excerpt":"基于   直接用 java 运行，以为例 有两个参数可选 初始化成功后，直接输入就可以查询，输入 exit 退出 多域检索 直接在命令行中运行 加载大约30秒 普通检索 通过作者或者单位进行检索 对年份进行限制","fields":{"slug":"/blogs/hello-lucene-2/"},"frontmatter":{"date":"September 19, 2016","title":"HelloLucene 使用Lucene搭建简易检索系统——多域检索 (2)","description":"在hellolucene的基础上实现多域检索","tags":["Java","Information retrieval"]}}},{"node":{"excerpt":"基于   直接用 java 运行，以为例 有两个参数可选 初始化成功后，直接输入就可以查询，输入 exit 退出","fields":{"slug":"/blogs/hello-lucene-1/"},"frontmatter":{"date":"September 14, 2016","title":"HelloLucene 使用Lucene搭建简易检索系统 (1)","description":"Lucene练习，基于lucene3.5.0，使用Lucene的简易检索代码。","tags":["Java","Information retrieval"]}}},{"node":{"excerpt":"实验准备 使用 Matlab_straight 进行此次音频实验，不过在运行源代码时matlab提示出现以下错误 还有 使用 audioread、audiowrite 函数修改相对应的源代码，错误消失后继续实验 实验1：A to X…","fields":{"slug":"/blogs/Audio-signal-processing/"},"frontmatter":{"date":"April 28, 2016","title":"Matlab音频转换实验","description":"1. 将原始声音转换为3种不同的声音。2. 将A的声音转换为B的声音。3. 度量两个不同声音的距离","tags":["Matlab","Audio signal processing"]}}},{"node":{"excerpt":"利用色彩直方图对图像进行检索。 首先定义图像向量。\n\n其中P为原图像，Q为目标图像 使用3种算法来测量图像距离。 Euclidean (L2)\n Histogram Intersection (HI)\n Bhattacharyya (Bh…","fields":{"slug":"/blogs/content-based-image-retrieval/"},"frontmatter":{"date":"April 21, 2016","title":"Preliminary Content Based Image Retrieval","description":"Color histogram based image retrieval","tags":["Python","Digital image processing","Algorithm"]}}},{"node":{"excerpt":"首先将其转为灰度图 转换效果\n 1D-DCT\n使用公式\n 得到输出 在整个图片上使用 2D-DCT…","fields":{"slug":"/blogs/Peak-signal-to-noise-ratio/"},"frontmatter":{"date":"April 18, 2016","title":"IDCT图像压缩，Peak signal-to-noise ratio 实验","description":"利用PSNR值，对图像压缩算法进行观察。","tags":["Python","Digital image processing","Algorithm"]}}},{"node":{"excerpt":"基于样本的图像补全，主要是利用邻域关系，匹配最合适的像素补充到空洞区域。 原图像\n 不过该算法复杂度较高，并且我使用的python，运行速度较慢，所以对于原图像进行压缩，压缩后图像\n 尝试把游泳圈部分移除，邻域窗口大小为…","fields":{"slug":"/blogs/Region-Filling-and-Object-Removal-by-Exemplar-Based-Image-Inpainting/"},"frontmatter":{"date":"April 11, 2016","title":"Region Filling and Object Removal by Exemplar-Based Image Inpainting","description":"基于样本的图像补全，主要是利用邻域关系，匹配最合适的像素补充到空洞区域。","tags":["Python","Digital image processing"]}}},{"node":{"excerpt":"Color Transfer 是基于一阶统计特性的颜色迁移，可以将参考图像的颜色传输到目标图像。 只利用opencv的图片读取和写入操作 首先将图片从rgb转换到Lαβ色彩空间 对输入图像做以下变换 结果示例，输入1.jpg\n\n和2.jpg\n\n输入结果图片为","fields":{"slug":"/blogs/color-transfer-lab/"},"frontmatter":{"date":"April 07, 2016","title":"Color Transfer 实验","description":"Color Transfer 是基于一阶统计特性的颜色迁移，可以将参考图像的颜色传输到目标图像。","tags":["Python","Digital image processing","Algorithm"]}}},{"node":{"excerpt":"当彩色图片转换为灰度图的时候，人类看起来比较重要的视觉信息经常会消失。color2gray算法就是用来通过保持彩色图像显著性特征的方法来减少这种人类视觉特征上的损失。 \n 如图，对于左边彩色图像做灰度图转换，中间图像使用传统方法转换后的效果，右边是使用color2gray…","fields":{"slug":"/blogs/Color2Gray-report/"},"frontmatter":{"date":"April 02, 2016","title":"Color2Gray算法","description":"当彩色图片转换为灰度图的时候，人类看起来比较重要的视觉信息经常会消失。color2gray算法就是用来通过保持彩色图像显著性特征的方法来减少这种人类视觉特征上的损失。","tags":["Algorithm","Digital image processing"]}}},{"node":{"excerpt":"摘 要  本实验研究了高温超导导线的性质。实验在液氮环境下, 使用四点法测定了B = 0时高温超导导线的U–I曲线, B ≠ 0 时导线平面垂直/平行于磁场情况下的临界电流 Ic–B 曲线, 以及 B 恒定时的Ic–θ曲线 (θ…","fields":{"slug":"/blogs/Superconductor-classification/"},"frontmatter":{"date":"December 22, 2015","title":"超导临界电流测量","description":"本实验研究了高温超导导线的性质。实验在液氮环境下, 使用四点法 测定了B = 0时高温超导导线的U–I曲线, B ≠ 0 时导线平面垂直/平行于磁场情况下的临界电流 Ic–B 曲线, 以及 B 恒定时的Ic–θ曲线 (θ是导线平面和磁场的夹角)。通过实验初步了解了高温超导导线的性质。","tags":["Physics","物理"]}}},{"node":{"excerpt":"…","fields":{"slug":"/blogs/Liquid-crystal/"},"frontmatter":{"date":"November 03, 2015","title":"液晶实验","description":"本实验对标准液晶盒和自制液晶盒, 测量了它们的电光特性,液晶扭曲角、响应时间等参量。通过对液晶电光特性的测量以及对光学双稳、混沌的观测, 使我们对液晶的基本特性有所认识, 并了解光学双稳和混沌的基本原理。","tags":["Physics","物理"]}}},{"node":{"excerpt":"This project is based on an arcade game called “Air Hockey” found in JumPin Gym U.S.A(“美国冒险乐园”in Chinese).This is a 2-player game playing on…","fields":{"slug":"/blogs/Air-Hockey-Game/"},"frontmatter":{"date":"September 26, 2014","title":"Air Hockey Game","description":"Implement this arcade game through OpenGL2.0","tags":["C/C++","OpenGL"]}}},{"node":{"excerpt":"初始代码 基于OpenMP、MPI实验代码 OpenMP 当    = 1000， = 30 时\n 当    = 1500， = 30 时\n MPI 当    = 1500， = 3，12核时\n 当    = 1500， = 30, 12核时\n 尝试混合mpi和openmp…","fields":{"slug":"/blogs/Parallel-computing-4/"},"frontmatter":{"date":"April 17, 2014","title":"并行计算实验（4）——Jacobi迭代的MPI + OpenMP实现","description":"Jacobi迭代的MPI + OpenMP实现","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"excerpt":"初始代码 基于第一次实验串行代码 当    = 500， = 3 时  使    = 1000   使    = 1500   使  = 30  使  = 300  初步使用 MPI 首先使用 尝试进行编译，但是提示 看来mpicc不能使用c++中的new 和 delete…","fields":{"slug":"/blogs/Parallel-computing-3/"},"frontmatter":{"date":"April 15, 2014","title":"并行计算实验（3）——使用MPICC","description":"使用MPICC","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"excerpt":"使用第一次实验代码 当    = 500， = 3 时  使    = 1000   使    = 1500   使  = 30  使  = 300  初步使用openMP 先直接使用openMP进行测试 当    = 500， =…","fields":{"slug":"/blogs/Parallel-computing-2/"},"frontmatter":{"date":"April 12, 2014","title":"并行计算实验（2）——使用OpenMP","description":"使用openMP","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"excerpt":"初始代码 当    都为20时运行时间小于0.002s 当    = 100,  = 3 时 使用  工具输出如下信息  时间还是较短，进一步加大问题规模 当    = 500,  = 3 时 使用  工具输出如下信息  运行了3…","fields":{"slug":"/blogs/parallel-computing-1/"},"frontmatter":{"date":"April 11, 2014","title":"并行计算实验（1）——提升空间局部性 ","description":"1. 提升空间局部性。2. 使用 IVDEP 编译指示，开启编译器优化选项","tags":["C/C++","Parallel computing","并行计算"]}}},{"node":{"excerpt":"实现一个简单的可以动态加载模块的HTTP服务器。","fields":{"slug":"/blogs/http-server-cpp/"},"frontmatter":{"date":"March 30, 2014","title":"HTTP服务的简单实现","description":"实现一个简单的可以动态加载模块的HTTP服务器。","tags":["C/C++","TCP/IP"]}}},{"node":{"excerpt":"所谓线程安全的是指，所编写的程序在多线程执行时，不会导致程序错误。为此，抽象链表库的代码必须仔细考虑多个线程同时访问时的同步问题。其基本原则是：（1）抽象链表库允许多个线程同时读取，但不允许同时写入；（…","fields":{"slug":"/blogs/LINKED-LIST/"},"frontmatter":{"date":"March 25, 2014","title":"线程安全的抽象链表类库","description":"实现线程安全的抽象链表库。","tags":["C/C++"]}}},{"node":{"excerpt":"参照 Complex 类库的代码，实现有理数类库。","fields":{"slug":"/blogs/rational-lib/"},"frontmatter":{"date":"March 22, 2014","title":"有理数类库","description":"参照 Complex 类库的代码，实现有理数类库。","tags":["C/C++"]}}},{"node":{"excerpt":"…","fields":{"slug":"/blogs/storage-pool/"},"frontmatter":{"date":"March 20, 2014","title":"动态存储管理机制","description":"重载 new 和 delete 操作符，基于伙伴系统（buddy system），创建自己的内存管理机制。","tags":["C/C++"]}}},{"node":{"excerpt":"80年代初，美国政府的高级研究工程机构（ ARPA）给加利福尼亚大学Berkeley分校提供了资金，让他们在UNIX操作系统下实现TCP/IP协议。在这个项目中，研究人员为TCP/IP网络通信开发了一个API（应用程序接口）。这个API称为Socket接口（套接字），也叫BSD…","fields":{"slug":"/blogs/File-Transfer-Protocol/"},"frontmatter":{"date":"March 19, 2014","title":"文件传输协议（FTP）的设计和实现","description":"了解FTP的具体实现细节。设计和实现一个简单的文件传输协议。","tags":["C/C++","TCP/IP"]}}},{"node":{"excerpt":"RIP（ Routing Information Protocol） 协议是一种域内的路由协议。其特点是：运行开销小、简单、范围广。\n二十世纪八十年代，加州大学伯克利分校在开发Unix系统时，在路由守护进程routed程序中设计实现了RIP协议软件。 routed…","fields":{"slug":"/blogs/Routing-Information-Protocol/"},"frontmatter":{"date":"March 07, 2014","title":"路由协议RIP的简单实现","description":"充分理解RIP（ Routing Information Protocol）协议，IP协议的报文处理和超时处理函数，并实现如下功能：RIP报文有效性检查；处理Req，根据RIP协议的流程设计Ruest报文；处理Response报文；路由表项超时删除；路由表项定时发送。","tags":["C/C++","TCP/IP"]}}},{"node":{"excerpt":"滑动窗口协议（Sliding Window Protocol）是计算机网络中为保证流控制和可靠传输而常用的一种协议，一般在传输层TCP…","fields":{"slug":"/blogs/Sliding-Window-Protocol/"},"frontmatter":{"date":"March 01, 2014","title":"滑动窗口协议","description":"采用滑动窗口中的选择重发协议实现了一个文件传输程序。","tags":["C/C++","TCP/IP"]}}},{"node":{"excerpt":"","fields":{"slug":"/blogs/A-star-algorithm/"},"frontmatter":{"date":"October 08, 2013","title":"使用C++实现A*寻路算法","description":"使用C++实现A*寻路算法","tags":["C/C++","Algorithm"]}}},{"node":{"excerpt":"","fields":{"slug":"/blogs/sudoku/"},"frontmatter":{"date":"October 07, 2013","title":"使用C++解决数独问题","description":"使用C++解决数独问题","tags":["C/C++","Algorithm"]}}},{"node":{"excerpt":"…","fields":{"slug":"/blogs/mathematical-model-best-posture/"},"frontmatter":{"date":"September 27, 2013","title":"数学模型：乙方后卫最佳的防御姿态","description":"在一场足球赛上，甲方边前锋从边路带球到乙方球门附近，乙方后卫上前阻拦，那么乙方后卫最佳的防御姿态（他面朝的方向，他的运动情况，他和甲方前锋的距离等）应该是怎样的？","tags":["数学模型","Mathematical model"]}}}]}},"pageContext":{}}}